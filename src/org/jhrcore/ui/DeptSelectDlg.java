package org.jhrcore.ui;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import org.jhrcore.entity.DeptCode;
import org.jhrcore.ui.listener.IPickDeptListener;
import org.jhrcore.util.MsgUtil;

/**
 *
 * @author mxliteboss
 */
public class DeptSelectDlg extends javax.swing.JDialog implements IPickDeptListener {

    private boolean click_ok = false;
    private DeptSelectPanel deptSelectPanel;
    private int selectMod = TreeSelectMod.nodeSelectMod;
    private List depts;
    private Object selectDept;
    private ValidateEntity validateEntity;

    public DeptCode getCurDept() {
        return deptSelectPanel.getCur_dept();
    }

    public boolean isClick_ok() {
        return click_ok;
    }

    public List<DeptCode> getSelectDepts() {
        return deptSelectPanel.getSelectDepts();
    }

    public DeptSelectDlg(List<DeptCode> depts) {
        this(depts, null);
    }

    public DeptSelectDlg(List<DeptCode> depts, DeptCode selectDept) {
        this(depts, selectDept, TreeSelectMod.nodeSelectMod);
    }

    public DeptSelectDlg(List<DeptCode> depts, Object selectDept, int selectMod) {
        this(depts, selectDept, selectMod, null);
    }

    public DeptSelectDlg(List<DeptCode> depts, Object selectDept, int selectMod, ValidateEntity ve) {
        this.setTitle("请选择部门：");
        this.depts = depts;
        this.selectDept = selectDept;
        this.validateEntity = ve;
        this.selectMod = selectMod;
        initComponents();
        initOthers();
        setupEvents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);

        pnlMain.setLayout(new java.awt.BorderLayout());

        btnOk.setText("确定");

        btnCancel.setText("取消");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(btnOk)
                .addGap(18, 18, 18)
                .addComponent(btnCancel)
                .addContainerGap(73, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOk)
                    .addComponent(btnCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel pnlMain;
    // End of variables declaration//GEN-END:variables

    private void initOthers() {
        deptSelectPanel = new DeptSelectPanel(depts, selectDept, selectMod);
        deptSelectPanel.addPickDeptListener(this);
        pnlMain.add(deptSelectPanel, BorderLayout.CENTER);
    }

    private void setupEvents() {
        btnOk.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                pickDept(deptSelectPanel.getCur_dept());
            }
        });
        btnCancel.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
            }
        });
    }

    @Override
    public void pickDept(Object dept) {
        if (dept == null) {
            return;
        }
        if (selectMod == TreeSelectMod.leafSelectMod && !((CheckTreeNode) deptSelectPanel.getDept_tree().getLastSelectedPathComponent()).isLeaf()) {
            MsgUtil.showInfoMsg("请选择末级部门");
            return;
        }
        if ((validateEntity != null) && (!validateEntity.isEntityValidate(dept))) {
            return;
        }
        click_ok = true;
        dispose();
    }
}
