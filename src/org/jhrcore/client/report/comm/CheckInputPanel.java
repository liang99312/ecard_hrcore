/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CheckInputPanel.java
 *
 * Created on 2012-2-8, 9:19:15
 */
package org.jhrcore.client.report.comm;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSplitPane;
import javax.swing.JTextField;
import javax.swing.JTree;
import org.jhrcore.client.CommUtil;
import org.jhrcore.client.UserContext;
import org.jhrcore.entity.DeptCode;
import org.jhrcore.entity.report.ReportDef;
import org.jhrcore.entity.report.ReportGroup;
import org.jhrcore.mutil.ReportUtil;
import org.jhrcore.ui.CheckTreeNode;
import org.jhrcore.ui.DeptSelectPanel;
import org.jhrcore.ui.ModalDialogCheckInput;
import org.jhrcore.ui.TreeSelectMod;
import org.jhrcore.util.ComponentUtil;

/**
 *
 * @author lenovo
 */
public class CheckInputPanel extends javax.swing.JPanel implements ModalDialogCheckInput {

    private JTextField jtfYm;
    private ReportGroup rgroup;
    private JTree reportTree;
    private JTree deptTree;
    private List reportRef;
    private DeptCode dc;

    public CheckInputPanel(ReportGroup rgroup, DeptCode dc) {
        this.rgroup = rgroup;
        this.dc = dc;
        initComponents();
        initOthers();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    public boolean check() {
        String ym = jtfYm.getText();
        if (ym == null || ym.trim().equals("")) {
            JOptionPane.showMessageDialog(null, "年/月/季度 不能为空");
            return false;
        }
        List<ReportDef> tmreports = new ArrayList<ReportDef>();
        for (Object cobj : this.getCheckReports()) {
            if (cobj instanceof ReportDef) {
                tmreports.add((ReportDef) cobj);
            }
        }
        if (tmreports.isEmpty()) {
            JOptionPane.showMessageDialog(null, "未选择任何报表");
            return false;
        }
        if (getCheckDepts().isEmpty()) {
            JOptionPane.showMessageDialog(null, "未选择任何部门");
            return false;
        }
        return true;
    }

    public List getCheckReports() {
        List rds = new ArrayList();
        List list = ComponentUtil.getCheckedObjs(reportTree);
        for (Object obj : list) {
            if (obj instanceof ReportDef) {
                rds.add(obj);
            }
        }
        return rds;
    }

    public List<DeptCode> getCheckDepts() {
        List rds = new ArrayList();
        List list = ComponentUtil.getCheckedObjs(deptTree);
        for (Object obj : list) {
            if (obj instanceof DeptCode) {
                rds.add(obj);
            }
        }
        return rds;
    }

    private void initOthers() {
        JLabel lbl = new JLabel("年/月/季度:");
        jtfYm = new JTextField();
        reportRef = CommUtil.fetchEntities("select rdf from ReportDef rdf,ReportRef rrf where rdf.reportDef_key=rrf.reportDef_key and rrf.reportGroup_key='" + rgroup.getReportGroup_key() + "'");
        CheckTreeNode rootNode = new CheckTreeNode(rgroup.getRname());
        rootNode.setSelected(true);
        for (Object obj : reportRef) {
            CheckTreeNode node = new CheckTreeNode(obj);
            node.setSelected(true);
            rootNode.add(node);
        }
        reportTree = new JTree(rootNode);
        ReportUtil.getReportTree(reportTree);
        this.setLayout(new BorderLayout());
        ComponentUtil.setSize(jtfYm, 120, 22);
        List depts = CommUtil.fetchEntities("select d from DeptCode d,ReportDept rd where d.dept_code like '" + dc.getDept_code() + "%' and (" + UserContext.getDept_right_rea_str("d") + ") and d.deptCode_key=rd.deptCode_key and rd.reportGroup_key='" + rgroup.getReportGroup_key() + "' order by d.dept_code");
        DeptSelectPanel pnlDept = new DeptSelectPanel(depts, depts, TreeSelectMod.nodeCheckMod);
        deptTree = pnlDept.getDept_tree();
        JSplitPane jsp = new JSplitPane(JSplitPane.VERTICAL_SPLIT, new JScrollPane(deptTree), new JScrollPane(reportTree));
        jsp.setDividerSize(1);
        jsp.setDividerLocation(200);
        this.add(jsp, BorderLayout.CENTER);
        JPanel pnlLabel = new JPanel(new FlowLayout(FlowLayout.CENTER));
        pnlLabel.add(lbl);
        pnlLabel.add(jtfYm);
        this.add(pnlLabel, BorderLayout.NORTH);
        this.setPreferredSize(new Dimension(400, 400));
    }

    public String getYm() {
        return jtfYm.getText();
    }
}
